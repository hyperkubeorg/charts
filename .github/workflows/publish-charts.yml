name: Publish Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - '*/Chart.yaml'
  workflow_dispatch:

jobs:
  # Job 1: Publish to GitHub Pages (traditional Helm repo)
  publish-to-pages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  # Job 2: Publish to GitHub Container Registry (OCI)
  publish-to-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Find and package charts
        run: |
          # Find all charts in root directories
          for chart_dir in */; do
            if [[ -f "${chart_dir}Chart.yaml" ]]; then
              echo "Found chart: $chart_dir"
              # Build dependencies
              helm dependency build "$chart_dir"
              # Package chart
              helm package "$chart_dir" --destination ./packages
            fi
          done

      - name: Push charts to GHCR
        run: |
          # Push all packaged charts
          for package in packages/*.tgz; do
            if [[ -f "$package" ]]; then
              echo "Pushing $package to GHCR..."
              helm push "$package" oci://ghcr.io/${{ github.repository_owner }}
            fi
          done

      - name: List available charts
        run: |
          echo "Charts published to GHCR. Install with:"
          for package in packages/*.tgz; do
            if [[ -f "$package" ]]; then
              # Extract chart name and version from filename
              filename=$(basename "$package" .tgz)
              chart_name=$(echo "$filename" | sed 's/-[0-9].*//')
              chart_version=$(echo "$filename" | sed 's/.*-\([0-9].*\)/\1/')
              echo "  helm install my-release oci://ghcr.io/${{ github.repository_owner }}/$chart_name --version $chart_version"
            fi
          done
